"## refs:\n## - https://www.envoyproxy.io/docs/envoy/v1.20.0/configuration/overview/examples\nadmin:\n  access_log_path: /dev/stdout\n  address:\n    socket_address:\n      address: 0.0.0.0\n      port_value: 9901\nstatic_resources:\n  listeners:\n  - name: listener_0\n    address:\n      socket_address:\n        address: 0.0.0.0\n        port_value: 10000\n    filter_chains:\n    - filters:\n      - name: envoy.filters.network.http_connection_manager\n        typed_config:\n          \"@type\": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\n          access_log:\n          - name: envoy.file_access_log\n            typed_config:\n              \"@type\": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog\n              path: /dev/stdout\n              log_format:\n                json_format:\n                  start_time: \"%START_TIME%\"\n                  method: \"%REQ(:METHOD)%\"\n                  path: \"%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%\"\n                  protocol: \"%PROTOCOL%\"\n                  response_code: \"%RESPONSE_CODE%\"\n                  response_flags: \"%RESPONSE_FLAGS%\"\n                  bytes_received: \"%BYTES_RECEIVED%\"\n                  bytes_sent: \"%BYTES_SENT%\"\n                  duration: \"%DURATION%\"\n                  envoy-upstream-service-time: \"%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%\"\n                  forwarded-for: \"%REQ(X-FORWARDED-FOR)%\"\n                  user-agent: \"%REQ(USER-AGENT)%\"\n                  request-id: \"%REQ(X-REQUEST-ID)%\"\n                  authority: \"%REQ(:AUTHORITY)%\"\n                  envoy-hostname: \"%HOSTNAME%\"\n                  upstream-host: \"%UPSTREAM_HOST%\"\n          stat_prefix: ingress_http\n          codec_type: auto\n          rds:\n            route_config_name: front-envoy-canary\n            config_source:\n              path: /srv/runtime/current/rds.yaml\n          http_filters:\n          - name: envoy.health_check\n            typed_config:\n              \"@type\": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck\n              pass_through_mode: false\n              #cluster_min_healthy_percentages:\n                # envoy自体がどんなときにunhealtyとしてLBからサービスアウトするかを決められるoption\n                # single tenantなclusterでは影響がないため、常にhealthを返す仕様にしているが、multi tenantなclusterなどでは考慮が必要なのでそのときに設計し直す必要がある\n              headers:\n                - name: \":path\"\n                  exact_match: /monitor\n          \n          - name: envoy.router\n            typed_config:\n              \"@type\": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\n          server_name: \" \"\n  clusters:\n  - name: nishiiwa-test-geko-pj-admin\n    connect_timeout: 0.25s\n    type: STRICT_DNS\n    lb_policy: ROUND_ROBIN\n    ignore_health_on_host_removal: true\n    health_checks:\n    - timeout: 5s\n      interval: 5s\n      unhealthy_threshold: 2\n      healthy_threshold: 2\n      tcp_health_check: {}\n    load_assignment:\n      cluster_name: nishiiwa-test-geko-pj-admin\n      endpoints:\n      - lb_endpoints:\n        - endpoint:\n            address:\n              socket_address:\n                address: nishiiwa-test-geko-pj-admin.nishiiwa-test-geko-pj.svc.cluster.local\n                port_value: 3000\n  - name: nishiiwa-test-geko-pj-api-internal\n    connect_timeout: 0.25s\n    type: STRICT_DNS\n    lb_policy: ROUND_ROBIN\n    ignore_health_on_host_removal: true\n    health_checks:\n    - timeout: 5s\n      interval: 5s\n      unhealthy_threshold: 2\n      healthy_threshold: 2\n      tcp_health_check: {}\n    load_assignment:\n      cluster_name: nishiiwa-test-geko-pj-api-internal\n      endpoints:\n      - lb_endpoints:\n        - endpoint:\n            address:\n              socket_address:\n                address: nishiiwa-test-geko-pj-api-internal.nishiiwa-test-geko-pj.svc.cluster.local\n                port_value: 3000\n  - name: nishiiwa-test-geko-pj-web\n    connect_timeout: 0.25s\n    type: STRICT_DNS\n    lb_policy: ROUND_ROBIN\n    ignore_health_on_host_removal: true\n    health_checks:\n    - timeout: 5s\n      interval: 5s\n      unhealthy_threshold: 2\n      healthy_threshold: 2\n      tcp_health_check: {}\n    load_assignment:\n      cluster_name: nishiiwa-test-geko-pj-web\n      endpoints:\n      - lb_endpoints:\n        - endpoint:\n            address:\n              socket_address:\n                address: nishiiwa-test-geko-pj-web.nishiiwa-test-geko-pj.svc.cluster.local\n                port_value: 3000"
